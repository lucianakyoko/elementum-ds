"use strict";(self.webpackChunkelementum_ds=self.webpackChunkelementum_ds||[]).push([[151],{"./src/components/Checkbox/Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckBoxDisplay:()=>CheckBoxDisplay,RadioDisplay:()=>RadioDisplay,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Checkbox__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/Checkbox/Checkbox.tsx");const checkTypes=Object.keys(_Checkbox__WEBPACK_IMPORTED_MODULE_0__.f0),sizes=Object.keys(_Checkbox__WEBPACK_IMPORTED_MODULE_0__.ug),stats=Object.keys(_Checkbox__WEBPACK_IMPORTED_MODULE_0__.Px),colors=Object.keys(_Checkbox__WEBPACK_IMPORTED_MODULE_0__.a4),__WEBPACK_DEFAULT_EXPORT__={title:"Design System/ Molecules/ Checkbox",component:_Checkbox__WEBPACK_IMPORTED_MODULE_0__.Ay,argTypes:{checkOption:{control:"radio",options:checkTypes},size:{control:"radio",options:sizes},stat:{control:"select",options:stats},color:{control:"select",options:colors},checked:{control:"boolean"},focused:{control:"boolean"}}},CheckBoxDisplay={args:{checkOption:"check",size:"small",stat:"default",color:"primary",checked:!0,focused:!1}},RadioDisplay={args:{checkOption:"radio",size:"medium",stat:"checked",color:"primary",checked:!0,focused:!1}},__namedExportsOrder=["CheckBoxDisplay","RadioDisplay"];CheckBoxDisplay.parameters={...CheckBoxDisplay.parameters,docs:{...CheckBoxDisplay.parameters?.docs,source:{originalSource:'{\n  args: {\n    checkOption: \'check\',\n    size: "small",\n    stat: "default",\n    color: "primary",\n    checked: true,\n    focused: false\n  }\n}',...CheckBoxDisplay.parameters?.docs?.source}}},RadioDisplay.parameters={...RadioDisplay.parameters,docs:{...RadioDisplay.parameters?.docs,source:{originalSource:'{\n  args: {\n    checkOption: \'radio\',\n    size: "medium",\n    stat: "checked",\n    color: "primary",\n    checked: true,\n    focused: false\n  }\n}',...RadioDisplay.parameters?.docs?.source}}}},"./src/components/Checkbox/Checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__,Px:()=>checkStatTypeMap,a4:()=>checkColorTypeMap,f0:()=>checkTypeMap,ug:()=>checkSizeTypeMap});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icon/Icon.tsx");const checkTypeMap={radio:"rounded-full",check:"rounded-sm"},checkSizeTypeMap={small:"sm",medium:"md",large:"md2x"},checkStatTypeMap={default:color=>({border:`1px solid ${color}`,backgroundColor:"transparent"}),focused:color=>({border:`4px solid ${color}56`,backgroundColor:`${color}14`}),checked:color=>({border:`1px solid ${color}`,backgroundColor:color})},checkColorTypeMap={primary:"#7A44FF",secondary:"#9A4AFF",tertiary:"#3994FF",positive:"#23C965",negative:"#FF554A",warning:"#FFC14A",dark:"#151A2D",readOnly:"#BCC3E3",disabled:"#9DA6CB"},Checkbox=({checkOption="radio",size="small",stat="default",color="primary",checked=!1,focused=!1,onChange})=>{var _checkStatTypeMap_stat;const[isChecked,setIsChecked]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(checked),[isFocused,setIsFocused]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(focused),colorType=checkColorTypeMap[color],sizeType=checkSizeTypeMap[size],checkType=(null===(_checkStatTypeMap_stat=checkStatTypeMap[stat])||void 0===_checkStatTypeMap_stat||_checkStatTypeMap_stat.call(checkStatTypeMap,colorType),checkTypeMap[checkOption]),currentStatType=isChecked?checkStatTypeMap.checked(colorType):isFocused?checkStatTypeMap.focused(colorType):checkStatTypeMap.default(colorType);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:currentStatType,className:`\n        ${"sm"===sizeType?"w-[16px] h-[16px]":"md"===sizeType?"w-[20px] h-[20px]":"w-[24px] h-[24px]"}\n        flex items-center justify-center ${checkType} cursor-pointer`,onClick:()=>{setIsChecked(!isChecked),onChange&&onChange(!isChecked)},onFocus:()=>setIsFocused(!0),onBlur:()=>setIsFocused(!1),tabIndex:0,children:isChecked&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Ay,{weight:"regular",name:"check",color:"#FFFFFF",size:sizeType})})},__WEBPACK_DEFAULT_EXPORT__=Checkbox;Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox",props:{checkOption:{required:!1,tsType:{name:"union",raw:"keyof typeof checkTypeMap",elements:[{name:"literal",value:"radio"},{name:"literal",value:"check"}]},description:"",defaultValue:{value:"'radio'",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"keyof typeof checkSizeTypeMap",elements:[{name:"literal",value:"small"},{name:"literal",value:"medium"},{name:"literal",value:"large"}]},description:"",defaultValue:{value:"'small'",computed:!1}},stat:{required:!1,tsType:{name:"union",raw:"keyof typeof checkStatTypeMap",elements:[{name:"literal",value:"default"},{name:"literal",value:"focused"},{name:"literal",value:"checked"}]},description:"",defaultValue:{value:"'default'",computed:!1}},color:{required:!1,tsType:{name:"union",raw:"keyof typeof checkColorTypeMap",elements:[{name:"literal",value:"primary"},{name:"literal",value:"secondary"},{name:"literal",value:"tertiary"},{name:"literal",value:"positive"},{name:"literal",value:"negative"},{name:"literal",value:"warning"},{name:"literal",value:"dark"},{name:"literal",value:"readOnly"},{name:"literal",value:"disabled"}]},description:"",defaultValue:{value:"'primary'",computed:!1}},checked:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},focused:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(checked:boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"checked"}],return:{name:"void"}}},description:""}}}},"./src/components/Icon/Icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__,B6:()=>iconSizeMap,Rd:()=>strokeWidthMap});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react_feather__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),__webpack_require__("./node_modules/react-feather/dist/index.js")),console=__webpack_require__("./node_modules/console-browserify/index.js");const iconMap={};Object.keys(react_feather__WEBPACK_IMPORTED_MODULE_2__).forEach((iconName=>{iconMap[toPascalCase(iconName)]=react_feather__WEBPACK_IMPORTED_MODULE_2__[iconName]}));const iconSizeMap={xs:12,sm:16,md:20,md2x:24,md3x:32,lg:48,lg2x:64,lg3x:72,xl:84,xl2x:96,xl3x:114},strokeWidthMap={thin:1,regular:2,bold:3};function toPascalCase(name){return name.split("-").map((part=>part.charAt(0).toUpperCase()+part.slice(1))).join("")}const Icon=({name,size="md2x",weight="regular",color="currentColor"})=>{const iconKey=toPascalCase(name),IconComponent=iconMap[iconKey],iconSize=iconSizeMap[size],strokeWidth=strokeWidthMap[weight];return IconComponent?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconComponent,{size:iconSize,color,strokeWidth}):(console.warn(`Icon "${name}" not found!`),null)},__WEBPACK_DEFAULT_EXPORT__=Icon;Icon.__docgenInfo={description:"",methods:[],displayName:"Icon",props:{name:{required:!0,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"union",raw:"keyof typeof iconSizeMap",elements:[{name:"literal",value:"xs"},{name:"literal",value:"sm"},{name:"literal",value:"md"},{name:"literal",value:"md2x"},{name:"literal",value:"md3x"},{name:"literal",value:"lg"},{name:"literal",value:"lg2x"},{name:"literal",value:"lg3x"},{name:"literal",value:"xl"},{name:"literal",value:"xl2x"},{name:"literal",value:"xl3x"}]},description:"",defaultValue:{value:"'md2x'",computed:!1}},color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'currentColor'",computed:!1}},weight:{required:!1,tsType:{name:"union",raw:"keyof typeof strokeWidthMap",elements:[{name:"literal",value:"thin"},{name:"literal",value:"regular"},{name:"literal",value:"bold"}]},description:"",defaultValue:{value:"'regular'",computed:!1}}}}}}]);